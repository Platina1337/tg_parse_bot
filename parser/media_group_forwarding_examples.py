import asyncio
import sys
import os
from typing import List

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from pyrogram import Client
from pyrogram.types import Message

async def demonstrate_media_group_forwarding():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø"""
    
    print("=== –°–ø–æ—Å–æ–±—ã –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø ===\n")
    
    print("üéØ **–°–ø–æ—Å–æ–± 1: –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π)**")
    print("""
    # 1. –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã
    media_group_messages = [msg for msg in messages if msg.media_group_id == target_group_id]
    
    # 2. –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ ID –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞
    media_group_messages.sort(key=lambda m: m.id)
    
    # 3. –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ
    for message in media_group_messages:
        await userbot.forward_messages(
            chat_id=target_chat,
            from_chat_id=source_chat,
            message_ids=[message.id]
        )
    """)
    
    print("\nüéØ **–°–ø–æ—Å–æ–± 2: –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–¥–Ω–∏–º –≤—ã–∑–æ–≤–æ–º**")
    print("""
    # 1. –°–æ–±–∏—Ä–∞–µ–º ID –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã
    media_group_messages = [msg for msg in messages if msg.media_group_id == target_group_id]
    message_ids = [msg.id for msg in sorted(media_group_messages, key=lambda m: m.id)]
    
    # 2. –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤—Å–µ —Å—Ä–∞–∑—É
    await userbot.forward_messages(
        chat_id=target_chat,
        from_chat_id=source_chat,
        message_ids=message_ids  # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö ID
    )
    """)
    
    print("\nüéØ **–°–ø–æ—Å–æ–± 3: –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã**")
    print("""
    # 1. –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã
    media_group_messages = [msg for msg in messages if msg.media_group_id == target_group_id]
    if media_group_messages:
        first_message = min(media_group_messages, key=lambda m: m.id)
        
        # 2. –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ç–æ–ª—å–∫–æ –µ–≥–æ
        await userbot.forward_messages(
            chat_id=target_chat,
            from_chat_id=source_chat,
            message_ids=[first_message.id]
        )
    """)
    
    print("\nüéØ **–°–ø–æ—Å–æ–± 4: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã (–Ω–µ –ø–µ—Ä–µ—Å—ã–ª–∫–∞)**")
    print("""
    # 1. –°–æ–±–∏—Ä–∞–µ–º –º–µ–¥–∏–∞ –æ–±—ä–µ–∫—Ç—ã
    media_group_messages = [msg for msg in messages if msg.media_group_id == target_group_id]
    media_objects = []
    
    for msg in sorted(media_group_messages, key=lambda m: m.id):
        if msg.photo:
            media_objects.append(InputMediaPhoto(msg.photo.file_id))
        elif msg.video:
            media_objects.append(InputMediaVideo(msg.video.file_id))
        # ... –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã –º–µ–¥–∏–∞
    
    # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –Ω–æ–≤—É—é –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É
    await userbot.send_media_group(
        chat_id=target_chat,
        media=media_objects
    )
    """)
    
    print("\nüéØ **–°–ø–æ—Å–æ–± 5: –£–º–Ω–∞—è –ø–µ—Ä–µ—Å—ã–ª–∫–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π**")
    print("""
    async def forward_media_group_smart(userbot, source_chat, target_chat, media_group_id):
        # 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã
        media_group_messages = []
        async for message in userbot.get_chat_history(source_chat, limit=100):
            if getattr(message, 'media_group_id', None) == media_group_id:
                media_group_messages.append(message)
        
        if not media_group_messages:
            print(f"–ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ {media_group_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        # 2. –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ ID
        media_group_messages.sort(key=lambda m: m.id)
        
        # 3. –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            for message in media_group_messages:
                await userbot.forward_messages(
                    chat_id=target_chat,
                    from_chat_id=source_chat,
                    message_ids=[message.id]
                )
            print(f"–ü–µ—Ä–µ—Å–ª–∞–Ω–∞ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ {media_group_id} ({len(media_group_messages)} —Å–æ–æ–±—â–µ–Ω–∏–π)")
            return True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã {media_group_id}: {e}")
            return False
    """)
    
    print("\nüéØ **–°–ø–æ—Å–æ–± 6: –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫**")
    print("""
    async def forward_media_group_with_retry(userbot, source_chat, target_chat, media_group_id, max_retries=3):
        for attempt in range(max_retries):
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã
                media_group_messages = []
                async for message in userbot.get_chat_history(source_chat, limit=200):
                    if getattr(message, 'media_group_id', None) == media_group_id:
                        media_group_messages.append(message)
                
                if not media_group_messages:
                    print(f"–ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ {media_group_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    return False
                
                # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º
                media_group_messages.sort(key=lambda m: m.id)
                
                for message in media_group_messages:
                    await userbot.forward_messages(
                        chat_id=target_chat,
                        from_chat_id=source_chat,
                        message_ids=[message.id]
                    )
                
                print(f"‚úÖ –ú–µ–¥–∏–∞–≥—Ä—É–ø–ø–∞ {media_group_id} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–∞")
                return True
                
            except Exception as e:
                print(f"‚ùå –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –Ω–µ—É–¥–∞—á–Ω–∞: {e}")
                if attempt < max_retries - 1:
                    await asyncio.sleep(2 ** attempt)  # –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                else:
                    print(f"‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã –¥–ª—è –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã {media_group_id}")
                    return False
    """)
    
    print("\nüìã **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–ø–æ—Å–æ–±–æ–≤:**")
    print("""
    | –°–ø–æ—Å–æ–± | –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ | –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ | –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ |
    |--------|-------------|------------|---------------|
    | 1 (—Ü–∏–∫–ª) | –ü—Ä–æ—Å—Ç–æ—Ç–∞, –∫–æ–Ω—Ç—Ä–æ–ª—å | –ú–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ | –î–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö –≥—Ä—É–ø–ø |
    | 2 (–º–∞—Å—Å–∏–≤) | –û–¥–∏–Ω –∑–∞–ø—Ä–æ—Å | –°–ª–æ–∂–Ω–µ–µ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ | –î–ª—è –Ω–∞–¥–µ–∂–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π |
    | 3 (–ø–µ—Ä–≤–æ–µ) | –ë—ã—Å—Ç—Ä–æ—Ç–∞ | –¢–µ—Ä—è—é—Ç—Å—è –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã | –î–ª—è –ø—Ä–µ–≤—å—é |
    | 4 (–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ) | –ù–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç | –¢–µ—Ä—è–µ—Ç—Å—è –∏—Å—Ç–æ—á–Ω–∏–∫ | –î–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏ |
    | 5 (—É–º–Ω–∞—è) | –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å | –°–ª–æ–∂–Ω–æ—Å—Ç—å | –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ |
    | 6 (—Å –ø–æ–≤—Ç–æ—Ä–∞–º–∏) | –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å | –ú–µ–¥–ª–µ–Ω–Ω–æ—Å—Ç—å | –î–ª—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö |
    """)
    
    print("\nüéØ **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**")
    print("""
    ‚úÖ –î–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å–ª—É—á–∞–µ–≤: –°–ø–æ—Å–æ–± 1 (—Ü–∏–∫–ª –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º)
    ‚úÖ –î–ª—è –±–æ–ª—å—à–∏—Ö –º–µ–¥–∏–∞–≥—Ä—É–ø–ø: –°–ø–æ—Å–æ–± 2 (–º–∞—Å—Å–∏–≤ ID)
    ‚úÖ –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞: –°–ø–æ—Å–æ–± 5 (—É–º–Ω–∞—è –ø–µ—Ä–µ—Å—ã–ª–∫–∞)
    ‚úÖ –î–ª—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: –°–ø–æ—Å–æ–± 6 (—Å –ø–æ–≤—Ç–æ—Ä–∞–º–∏)
    """)

if __name__ == "__main__":
    asyncio.run(demonstrate_media_group_forwarding()) 